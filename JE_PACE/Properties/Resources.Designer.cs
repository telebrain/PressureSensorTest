//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JE_PACE.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("JE_PACE.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось подключиться к калибратору давления.
        /// </summary>
        internal static string ConnectError {
            get {
                return ResourceManager.GetString("ConnectError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось разобрать принятое сообщение.
        /// </summary>
        internal static string ParseError {
            get {
                return ResourceManager.GetString("ParseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось прочитать информацию о конфигурации калибратора давления.
        /// </summary>
        internal static string ReadConfigError {
            get {
                return ResourceManager.GetString("ReadConfigError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось прочитать состояние выхода &quot;Регулирование/Измерение&quot; {0}-го модуля калибратора давления.
        /// </summary>
        internal static string ReadOutStateError {
            get {
                return ResourceManager.GetString("ReadOutStateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось прочитать значение давления на выходе {0}-го модуля калибратора давления.
        /// </summary>
        internal static string ReadPressureError {
            get {
                return ResourceManager.GetString("ReadPressureError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось прочитать диапазон {0}-го модуля калибратора давления.
        /// </summary>
        internal static string ReadRangeError {
            get {
                return ResourceManager.GetString("ReadRangeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось прочитать заводской номер калибратора давления.
        /// </summary>
        internal static string ReadSnError {
            get {
                return ResourceManager.GetString("ReadSnError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось прочитать заводской номер {0}-го модуля калибратора давления.
        /// </summary>
        internal static string ReadSnModulError {
            get {
                return ResourceManager.GetString("ReadSnModulError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось прочитать уставку {0}-го модуля калибратора давления.
        /// </summary>
        internal static string ReadSpError {
            get {
                return ResourceManager.GetString("ReadSpError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось прочитать значение давления на входе &quot;-&quot; {0}-го модуля калибратора давления.
        /// </summary>
        internal static string ReadSrcMinusError {
            get {
                return ResourceManager.GetString("ReadSrcMinusError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось прочитать значение давления на входе &quot;+&quot; {0}-го модуля калибратора давления.
        /// </summary>
        internal static string ReadSrcPlusError {
            get {
                return ResourceManager.GetString("ReadSrcPlusError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось прочитать единицы измерения {0}-го модуля калибратора давления.
        /// </summary>
        internal static string ReadUnitError {
            get {
                return ResourceManager.GetString("ReadUnitError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось переключить режим выхода &quot;Регулирование/Измерение&quot; {0}-го модуля калибратора давления.
        /// </summary>
        internal static string WriteOutStateError {
            get {
                return ResourceManager.GetString("WriteOutStateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось записать уставку {0}-го модуля калибратора давления.
        /// </summary>
        internal static string WriteSpError {
            get {
                return ResourceManager.GetString("WriteSpError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось записать единицы измерения {0}-го модуля калибратора давления.
        /// </summary>
        internal static string WriteUnitError {
            get {
                return ResourceManager.GetString("WriteUnitError", resourceCulture);
            }
        }
    }
}
